df %>% filter(age < 100) %>%
ggplot(aes(age)) +
geom_histogram(binwidth = 2, fill = "springgreen3") +
ggtitle("Histogram of Ages")
colSums(is.na(df))
Symptoms = str_split(AdverseFoodEvents$Symptoms,',')
AllSymptoms = data.frame(matrix(unlist(Symptoms),byrow=T),stringsAsFactors=FALSE)
symptoms = str_split(df$one_row_symptoms,',')
all_symptoms = data.frame(matrix(unlist(symptoms),byrow=T),stringsAsFactors=FALSE)
library(stringr)
symptoms = str_split(df$one_row_symptoms,',')
all_symptoms = data.frame(matrix(unlist(symptoms),byrow=T),stringsAsFactors=FALSE)
View(all_symptoms)
View(all_symptoms)
colnames(all_symptoms) = "symptom"
View(all_symptoms)
all_symptoms_unique = all_symptoms[!duplicated(symptom)]
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms)]
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms),]
all_symptoms_unique
install.packages("splitstackshape")
library(splitstackshape)
symptoms = cSplit(events, splitCols = "one_row_symptoms", direction = "wide", sep = ",")
symptoms = cSplit(df, splitCols = "one_row_symptoms", direction = "wide", sep = ",")
View(symptoms)
symptoms = cSplit(df, splitCols = "one_row_symptoms", direction = "long", sep = ",")
View(symptoms)
symptoms = str_split(df$one_row_symptoms,',')
all_symptoms = data.frame(matrix(unlist(symptoms),byrow=T),stringsAsFactors=FALSE)
colnames(all_symptoms) = "symptom"
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms),]
symptoms_df = data.frame(matrix(nrow = nrow(df), ncol = length(all_symptoms_unique)))
View(symptoms_df)
colnames(symptoms_df) = all_symptoms_unique
df = cbind(df, symptoms_df)
symptoms = csplit(df, "one_row_symptoms", sep = ",", direction = "long")
symptoms = cSplit(df, "one_row_symptoms", sep = ",", direction = "long")
View(symptoms)
View(subset(symptoms, !is.na(SWELLING_FACE)))
View(subset(symptoms, !is.na(RASH)))
symptoms = symptoms[,c("report_num", "one_row_symptoms")]
View(symptoms)
library(reshape2)
symptoms = dcast(symptoms, report_num ~ one_row_symptoms)
symptoms = cSplit(df, "one_row_symptoms", sep = ",", direction = "long")
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library(stringr)
library(splitstackshape)
library(reshape2)
#read in the data and give the columns r-friendly names
colnames = c("report_num", "report_create_date", "event_date", "product_role",
"brand_product_name", "industry_code", "industry_name",
"age", "age_unit", "gender", "one_row_outcomes", "one_row_symptoms")
df = read.csv("~/Desktop/MATH 441/Project/CAERS_ASCII_2004_2017Q2.csv",
sep = ",", header = TRUE, quote = "\"", col.names = colnames,
colClasses = "character", na.strings = "")
#give the columns the appropriate types
df$report_num = as.character(df$report_num)
df$report_create_date = mdy(df$report_create_date)
df$event_date = mdy(df$event_date)
df$product_role = factor(df$product_role)
df$brand_product_name = as.character(df$brand_product_name)
df$industry_code = factor(df$industry_code)
df$industry_name = factor(df$industry_name)
df$age = as.numeric(df$age)
df$age_unit = factor(df$age_unit)
df$gender = factor(df$gender)
df$one_row_outcomes = as.character(df$one_row_outcomes)
df$one_row_symptoms = as.character(df$one_row_symptoms)
#turn all ages into years
df = mutate(df, age = ifelse(age_unit == "Day(s)", age/365.25,
ifelse(age_unit == "Decade(s)", age*10,
ifelse(age_unit == "Month(s)", age/12,
ifelse(age_unit == "Week(s)", age/52,
ifelse(age_unit == "Year(s)", age,
ifelse(age_unit == "Not Available", age, age)))))))
#Historgram of ages
df %>% filter(age < 100) %>%
ggplot(aes(age)) +
geom_histogram(binwidth = 2, fill = "springgreen3") +
ggtitle("Histogram of Ages")
indices = sample(seq_len(nrow(df)), size = floor(0.1 * nrow(df)))
df = df[indices,]
symptoms = str_split(df$one_row_symptoms,',')
all_symptoms = data.frame(matrix(unlist(symptoms),byrow=T),stringsAsFactors=FALSE)
colnames(all_symptoms) = "symptom"
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms),]
symptoms = cSplit(df, "one_row_symptoms", sep = ",", direction = "long")
symptoms = symptoms[,c("report_num", "one_row_symptoms")]
symptoms = dcast(symptoms, report_num ~ one_row_symptoms)
#One Hot Encode Outcomes
outcomes = str_split(df$one_row_outcomes,',')
all_outcomes = data.frame(matrix(unlist(outcomes),byrow=T),stringsAsFactors=FALSE)
colnames(all_outcomes) = "outcome"
all_outcomes_unique = all_outcomes[!duplicated(all_outcomes),]
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("report_num", "one_row_outcomes")]
outcomes = dcast(outcomes, report_num ~ one_row_outcomes)
View(outcomes)
View(outcomes)
View(df)
outcomes = dcast(outcomes, report_num ~ one_row_outcomes, fun.aggregate = as.logical)
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("report_num", "one_row_outcomes")]
outcomes = dcast(outcomes, report_num ~ one_row_outcomes, fun.aggregate = as.logical)
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("report_num", "one_row_outcomes")]
outcomes = dcast(outcomes, report_num ~ one_row_outcomes, fill = 0, fun.aggregate = as.logical)
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("report_num", "one_row_outcomes")]
outcomes = dcast(outcomes, report_num ~ one_row_outcomes, fun.aggregate = tabulate)
df$ID = rownames(df)
View(df)
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library(stringr)
library(splitstackshape)
library(reshape2)
#read in the data and give the columns r-friendly names
colnames = c("report_num", "report_create_date", "event_date", "product_role",
"brand_product_name", "industry_code", "industry_name",
"age", "age_unit", "gender", "one_row_outcomes", "one_row_symptoms")
df = read.csv("~/Desktop/MATH 441/Project/CAERS_ASCII_2004_2017Q2.csv",
sep = ",", header = TRUE, quote = "\"", col.names = colnames,
colClasses = "character", na.strings = "")
#give the columns the appropriate types
df$report_num = as.character(df$report_num)
df$report_create_date = mdy(df$report_create_date)
df$event_date = mdy(df$event_date)
df$product_role = factor(df$product_role)
df$brand_product_name = as.character(df$brand_product_name)
df$industry_code = factor(df$industry_code)
df$industry_name = factor(df$industry_name)
df$age = as.numeric(df$age)
df$age_unit = factor(df$age_unit)
df$gender = factor(df$gender)
df$one_row_outcomes = as.character(df$one_row_outcomes)
df$one_row_symptoms = as.character(df$one_row_symptoms)
#Add unique row id
df$ID = rownames(df)
#turn all ages into years
df = mutate(df, age = ifelse(age_unit == "Day(s)", age/365.25,
ifelse(age_unit == "Decade(s)", age*10,
ifelse(age_unit == "Month(s)", age/12,
ifelse(age_unit == "Week(s)", age/52,
ifelse(age_unit == "Year(s)", age,
ifelse(age_unit == "Not Available", age, age)))))))
#Historgram of ages
df %>% filter(age < 100) %>%
ggplot(aes(age)) +
geom_histogram(binwidth = 2, fill = "springgreen3") +
ggtitle("Histogram of Ages")
#Sample df for testing code
indices = sample(seq_len(nrow(df)), size = floor(0.1 * nrow(df)))
#df = df[indices,]
df = df[indices,]
outcomes = str_split(df$one_row_outcomes,',')
all_outcomes = data.frame(matrix(unlist(outcomes),byrow=T),stringsAsFactors=FALSE)
colnames(all_outcomes) = "outcome"
all_outcomes_unique = all_outcomes[!duplicated(all_outcomes),]
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("ID", "one_row_outcomes")]
outcomes = dcast(outcomes, ID ~ one_row_outcomes, fun.aggregate = tabulate)
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("ID", "one_row_outcomes")]
outcomes = dcast(outcomes, ID ~ one_row_outcomes)
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("ID", "one_row_outcomes")]
outcomes = dcast(outcomes, ID ~ one_row_outcomes, fun.aggregate = length)
symptoms = str_split(df$one_row_symptoms,',')
all_symptoms = data.frame(matrix(unlist(symptoms),byrow=T),stringsAsFactors=FALSE)
colnames(all_symptoms) = "symptom"
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms),]
symptoms = cSplit(df, "one_row_symptoms", sep = ",", direction = "long")
symptoms = symptoms[,c("ID", "one_row_symptoms")]
symptoms = dcast(symptoms, ID ~ one_row_symptoms, fun.aggregate = length)
#One Hot Encode Outcomes
outcomes = str_split(df$one_row_outcomes,',')
all_outcomes = data.frame(matrix(unlist(outcomes),byrow=T),stringsAsFactors=FALSE)
colnames(all_outcomes) = "outcome"
all_outcomes_unique = all_outcomes[!duplicated(all_outcomes),]
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("ID", "one_row_outcomes")]
outcomes = dcast(outcomes, ID ~ one_row_outcomes, fun.aggregate = length)
View(all_symptoms)
View(outcomes)
df = left_join(df, symptoms, by = "ID")
df = left_join(df, outcomes, by = "ID")
View(df)
save.image("~/Desktop/MATH 441/Project/workspace.RData")
library(lubridate)
library(plyr)
library(dplyr)
library(ggplot2)
library(stringr)
library(splitstackshape)
library(reshape2)
#read in the data and give the columns r-friendly names
colnames = c("report_num", "report_create_date", "event_date", "product_role",
"brand_product_name", "industry_code", "industry_name",
"age", "age_unit", "gender", "one_row_outcomes", "one_row_symptoms")
df = read.csv("~/Desktop/MATH 441/Project/CAERS_ASCII_2004_2017Q2.csv",
sep = ",", header = TRUE, quote = "\"", col.names = colnames,
colClasses = "character", na.strings = "")
#give the columns the appropriate types
df$report_num = as.character(df$report_num)
df$report_create_date = mdy(df$report_create_date)
df$event_date = mdy(df$event_date)
df$product_role = factor(df$product_role)
df$brand_product_name = as.character(df$brand_product_name)
df$industry_code = factor(df$industry_code)
df$industry_name = factor(df$industry_name)
df$age = as.numeric(df$age)
df$age_unit = factor(df$age_unit)
df$gender = factor(df$gender)
df$one_row_outcomes = as.character(df$one_row_outcomes)
df$one_row_symptoms = as.character(df$one_row_symptoms)
#Add unique row id
df$ID = rownames(df)
#turn all ages into years
df = mutate(df, age = ifelse(age_unit == "Day(s)", age/365.25,
ifelse(age_unit == "Decade(s)", age*10,
ifelse(age_unit == "Month(s)", age/12,
ifelse(age_unit == "Week(s)", age/52,
ifelse(age_unit == "Year(s)", age,
ifelse(age_unit == "Not Available", age, age)))))))
#Historgram of ages
df %>% filter(age < 100) %>%
ggplot(aes(age)) +
geom_histogram(binwidth = 2, fill = "springgreen3") +
ggtitle("Histogram of Ages")
#Sample df for testing code
indices = sample(seq_len(nrow(df)), size = floor(0.1 * nrow(df)))
#df = df[indices,]
#One Hot Encode Symptoms
symptoms = str_split(df$one_row_symptoms,',')
all_symptoms = data.frame(matrix(unlist(symptoms),byrow=T),stringsAsFactors=FALSE)
colnames(all_symptoms) = "symptom"
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms),]
symptoms = cSplit(df, "one_row_symptoms", sep = ",", direction = "long")
symptoms = symptoms[,c("ID", "one_row_symptoms")]
symptoms = dcast(symptoms, ID ~ one_row_symptoms, fun.aggregate = length)
#One Hot Encode Outcomes
outcomes = str_split(df$one_row_outcomes,',')
all_outcomes = data.frame(matrix(unlist(outcomes),byrow=T),stringsAsFactors=FALSE)
colnames(all_outcomes) = "outcome"
all_outcomes_unique = all_outcomes[!duplicated(all_outcomes),]
outcomes = cSplit(df, "one_row_outcomes", sep = ",", direction = "long")
outcomes = outcomes[,c("ID", "one_row_outcomes")]
outcomes = dcast(outcomes, ID ~ one_row_outcomes, fun.aggregate = length)
#Merge Symptoms and Outcomes with df
df = left_join(df, symptoms, by = "ID")
df = left_join(df, outcomes, by = "ID")
save.image("~/Desktop/MATH 441/Project/workspace.RData")
View(df)
colnames(symptoms)
sort(all_symptoms)
sort(all_symptoms_unique)
colnames(symptoms)
list_symptoms = str_split(df$one_row_symptoms,',')
list_symptoms = trimws(list_symptoms)
all_symptoms = data.frame(matrix(unlist(list_symptoms),byrow=T),stringsAsFactors=FALSE)
colnames(all_symptoms) = "symptom"
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms),]
list_symptoms
list_symptoms = str_split(df$one_row_symptoms,',')
all_symptoms = data.frame(matrix(unlist(list_symptoms),byrow=T),stringsAsFactors=FALSE)
colnames(all_symptoms) = "symptom"
View(all_symptoms)
all_symptoms$symptom = sapply(all_symptoms$symptom, trimws)
all_symptoms_unique = all_symptoms[!duplicated(all_symptoms),]
list_outcomes = str_split(df$one_row_outcomes,',')
all_outcomes = data.frame(matrix(unlist(list_outcomes),byrow=T),stringsAsFactors=FALSE)
colnames(all_outcomes) = "outcome"
all_outcomes$outcome = sapply(all_outcomes$outcome, trimws)
all_outcomes_unique = all_outcomes[!duplicated(all_outcomes),]
save.image("~/Desktop/MATH 441/Project/workspace.RData")
View(outcomes)
View(outcomes)
View(all_outcomes)
install.packages("treetop")
install.packages("corrplot")
install.packages("RColorBrewer")
library(treemap)
library(corrplot)
library(RColorBrewer)
library(treemap)
install.packages("treemap")
library(treemap)
treemap(all_outcomes, index = "outcome", vSize = "Freq", vColor = "#58ACFA", palette = viridis(6),
title = "Freqency of Outcomes")
outcomes.freq = ddply(outcomes, .(outcome), Freq = length(outcome))
outcomes.freq = ddply(all_outcomes, .(outcome), summarise, Freq = length(outcome))
View(outcomes.freq)
treemap(outcomes.freq, index = "outcome", vSize = "Freq", palette = viridis(12),
title = "Freqency of Outcomes")
treemap(outcomes.freq, index = "outcome", vSize = "Freq", palette = scale_fill_brewer(palette="Dark2"),
title = "Freqency of Outcomes")
treemap(outcomes.freq, index = "outcome", vSize = "Freq", palette = "Dark2",
title = "Freqency of Outcomes")
treemap(outcomes.freq, index = "outcome", vSize = "Freq", palette = "set3",
title = "Freqency of Outcomes")
treemap(outcomes.freq, index = "outcome", vSize = "Freq", palette = "Set3",
title = "Freqency of Outcomes")
all_symptoms %>%
count(symptom, sort = TRUE) %>%
top_n(20) %>%
ggplot(aes(symptom)) +
geom_bar(stat = 'identity', fill = "springgreen4") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
all_symptoms %>%
count(symptom, sort = TRUE) %>%
top_n(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(fill = "springgreen4") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
all_symptoms %>%
count(symptom, sort = TRUE) %>%
top_n(20)
all_symptoms %>%
count(symptom, sort = TRUE) %>%
top_n(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(stat = "identity", fill = "springgreen4") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
all_symptoms %>%
count(symptom, sort = TRUE) %>%
mutate(symptom, reorder(symptom, n)) %>%
top_n(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(stat = "identity", fill = "springgreen3") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
all_symptoms %>%
count(symptom, sort = TRUE) %>%
mutate(symptom, factor(symptom, levels = symptom)) %>%
top_n(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(stat = "identity", fill = "springgreen3") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
#barchart of Symptoms
all_symptoms %>%
group_by(symptom) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
top_n(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(stat = "identity", fill = "springgreen3") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
#barchart of Symptoms
all_symptoms %>%
group_by(symptom) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
head(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(stat = "identity", fill = "springgreen3") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
all_symptoms %>%
group_by(symptom) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(symptom = reorder(symptom, n)) %>%
head(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(stat = "identity", fill = "springgreen3") +
coord_flip() +
ggtitle("Most frequently occurring symptoms")
#barchart of Symptoms
all_symptoms %>%
group_by(symptom) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(symptom = reorder(symptom, n)) %>%
head(20) %>%
ggplot(aes(symptom, n)) +
geom_bar(stat = "identity", fill = "springgreen3") +
coord_flip() +
ggtitle("Most frequently occurring symptoms") +
geom_text(aes(x = symptom, y = 1, label = n),
hjust = 0, vjust = .5, size = 4, color = "black")
View(outcomes)
correlations = select(-ID) %>%
cor()
correlations = outcomes %>%
select(-ID) %>%
cor()
View(correlations)
corrplot(correlations, order = "hclust", type = "upper")
View(outcomes)
View(outcomes)
outcomes.short = outcomes
colnames(outcomes.short) = c("ID",
"CAN",
"DEA",
"DIS",
"HOS",
"LTH",
"NSI",
"None",
"OS",
"INT",
"SI",
"HCP",
"ER")
correlations = outcomes.short %>%
select(-ID) %>%
cor()
corrplot(correlations, order = "hclust", type = "upper")
View(df)
table(df$product_role)
df %>%
group_by(industry_name) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(symptom = reorder(industry_name, n)) %>%
head(20) %>%
ggplot(aes(industry_name, n)) +
geom_bar(stat = "identity", fill = "slateblue3") +
coord_flip() +
ggtitle("Most frequently occurring industries") +
geom_text(aes(x = industry_name, y = 1, label = n),
hjust = 0, vjust = .5, size = 4, color = "black")
df %>%
group_by(industry_name) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(symptom = reorder(industry_name, n)) %>%
head(20)
df %>%
group_by(industry_name) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(industry_name = reorder(industry_name, n)) %>%
head(20) %>%
ggplot(aes(industry_name, n)) +
geom_bar(stat = "identity", fill = "slateblue3") +
coord_flip() +
ggtitle("Most frequently occurring industries") +
geom_text(aes(x = industry_name, y = 1, label = n),
hjust = 0, vjust = .5, size = 4, color = "black")
df %>%
group_by(industry_name) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(industry_name = reorder(industry_name, n)) %>%
head(20) %>%
ggplot(aes(industry_name, n)) +
geom_bar(stat = "identity", fill = "turquoise1") +
coord_flip() +
ggtitle("Most frequently occurring industries") +
geom_text(aes(x = industry_name, y = 1, label = n),
hjust = 0, vjust = .5, size = 4, color = "white")
#barchart of Industry name
df %>%
group_by(industry_name) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(industry_name = reorder(industry_name, n)) %>%
head(20) %>%
ggplot(aes(industry_name, n)) +
geom_bar(stat = "identity", fill = "turquoise1") +
coord_flip() +
ggtitle("Most frequently occurring industries") +
geom_text(aes(x = industry_name, y = 1, label = n),
hjust = 0, vjust = .5, size = 4, color = "black")
df %>%
group_by(brand_product_name) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
ungroup() %>%
mutate(brand_product_name = reorder(brand_product_name, n)) %>%
head(20) %>%
ggplot(aes(brand_product_name, n)) +
geom_bar(stat = "identity", fill = "violet") +
coord_flip() +
ggtitle("Most frequently occurring brands") +
geom_text(aes(x = brand_product_name, y = 1, label = n),
hjust = 0, vjust = .5, size = 4, color = "black")
View(symptoms)
View(symptoms)
load("~/Desktop/MATH 441/Project/workspace.RData")
View(symptoms)
head(symptoms, 5)
View(symptoms)
setwd(
"~/Desktop"
)
getwd()
setwd("~/")
setwd("~/Desktop")
getwd()
